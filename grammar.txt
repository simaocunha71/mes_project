Program  -> zeroOrMore Func

Func -> spaces Type '(' Parameters ')' '{' Statements '}'

Parameters -> Parameter ',' Parameters
           | empty

Parameter -> Type

Type -> int
     |  char
     |  string
     |  void

Statements -> Decl ';' Statements
           |  Assign ';' Statements
           |  If Statements
           |  FuncCall ';' Statements
           |  While Statements
           |  For Statements
           |  empty

Decl -> Declare
     |  DeclareAssign

Declare -> Type

DeclareAssign -> Type '=' Exp

Assign -> '=' Exp

If -> "if" '(' Cond ')' Bloco
   |  "if" '(' Cond ')' Bloco "else" Bloco

FuncCall -> '(' Args ')'

While -> "while" '(' Cond ')' Bloco

Cond -> NestedCond "==" Cond
     |  NestedCond "||" Cond
     |  NestedCond "&&" Cond
     |  NestedCond "<"  Cond
     |  NestedCond ">"  Cond
     |  NestedCond "<="  Cond
     |  NestedCond ">="  Cond
     |  NestedCond

NestedCond -> Exp
           |  '(' Cond ')'

For -> "for" '(' (zeroOrMore Decl) ';' Cond ';' (zeroOrMore Assign) ')' Bloco

Bloco -> '{' Statements '}'

Exp  -> spaces Exp1

Exp1 -> Exp2 "||" Exp1
     |  Exp2

Exp2 -> Exp3 "&&" Exp2
     |  Exp3

Exp3 -> Exp4 "==" Exp3
     |  Exp4

Exp4 -> Exp5 '<' Exp4
     |  Exp5 '>' Exp4
     |  Exp5 "<=" Exp4
     |  Exp5 ">=" Exp4
     |  Exp5

Exp5 -> Exp6 '+' Exp5
     |  Exp6 '-' Exp5
     |  Exp6

Exp5 -> Exp6 '*' Exp5
     |  Exp6 '/' Exp5
     |  Exp6

pFactor -> int
         |  true
         |  false
         |  var
         |  '('  Exp ')'